import { chat, saveChatDebounced, addOneMessage } from '../../../../script.js';

import { getContext } from '../../../extensions.js';

// Retrieve application context, including chat logs and participant info.
const context = getContext();
/**
 * –°–≤–∞–π–ø—ã
 */

 // === 1. –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–≤–∞–π–ø–æ–≤ ===
const pinCurrentSwipe = function(messageElement) {
    const mesId = Number(messageElement.closest(".mes").getAttribute("mesid"));
    const currentMessage = chat[mesId];
    if (!currentMessage) {
        showNotification('–û—à–∏–±–∫–∞: –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.', 'error');
        return;
    }

    const isLastMessage = chat.indexOf(currentMessage) === chat.length - 1;
    if (!isLastMessage) {
        showNotification('–Ω–µ–ª—å–∑—è...', 'error');
        return;
    }

    if (currentMessage.is_user) {
        showNotification('–Ω–µ–ª—å–∑—è...', 'error');
        return;
    }

    if (!currentMessage.swipes) {
        showNotification('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–≤–∞–π–ø–æ–≤ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è.', 'error');
        return;
    }

    if (!currentMessage.pinnedSwipes) {
        currentMessage.pinnedSwipes = [];
    }

    const currentSwipeId = currentMessage.swipe_id;

    if (!currentMessage.pinnedSwipes.includes(currentSwipeId)) {
        currentMessage.pinnedSwipes.push(currentSwipeId);
        showNotification('–°–≤–∞–π–ø —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω.', 'success');
    } else {
        showNotification('–≠—Ç–æ—Ç —Å–≤–∞–π–ø —É–∂–µ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω.', 'info');
    }

    saveChatDebounced(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–∞—Ç–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è
};




// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–æ–≤ –≤–Ω–µ –º–µ–Ω—é
const handleOutsideClick = function(event) {
    const menuContainer = document.querySelector('.pinned-swipes-menu');
    if (!menuContainer) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–¥–µ–ª–∞–Ω –ª–∏ –∫–ª–∏–∫ –≤–Ω—É—Ç—Ä–∏ –º–µ–Ω—é
    const isClickInsideMenu = menuContainer.contains(event.target);

    if (!isClickInsideMenu) {
        closePinnedSwipesMenu();
        document.removeEventListener('click', handleOutsideClick); // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è
    }
};


// === 2. –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ –º–µ–Ω—é –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö —Å–≤–∞–π–ø–æ–≤ ===
const showPinnedSwipesMenu = function() {
    const lastMessage = chat[chat.length - 1];
    if (!lastMessage || !lastMessage.pinnedSwipes || lastMessage.pinnedSwipes.length === 0) {
        showNotification('–ù–µ—Ç –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö —Å–≤–∞–π–ø–æ–≤.', 'info');
        return;
    }

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é, –µ—Å–ª–∏ –æ–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    const existingMenu = document.querySelector('.pinned-swipes-menu');
    if (existingMenu) existingMenu.remove();

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–∞
    loadPromptSettings();

    // –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–µ–Ω—é
    const menuContainer = document.createElement('div');
    menuContainer.className = 'pinned-swipes-menu';
    menuContainer.style.position = 'fixed';
    menuContainer.style.top = '10%';
    menuContainer.style.left = '50%';
    menuContainer.style.transform = 'translate(-50%, 0)';
    menuContainer.style.background = '#2c2f33';
    menuContainer.style.border = '1px solid #23272a';
    menuContainer.style.padding = '20px';
    menuContainer.style.zIndex = '1000';
    menuContainer.style.maxHeight = '80%';
    menuContainer.style.overflowY = 'auto';
    menuContainer.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.5)';
    menuContainer.style.borderRadius = '10px';
    menuContainer.style.width = '800px';
    menuContainer.style.opacity = '0';
    menuContainer.style.transition = 'opacity 0.3s ease';

    // –ú–∞—Å—Å–∏–≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–≤–∞–π–ø–æ–≤
    const selectedSwipes = [];

    // –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞
    const searchContainer = document.createElement('div');
    searchContainer.style.display = 'flex';
    searchContainer.style.justifyContent = 'space-between';
    searchContainer.style.alignItems = 'center';
    searchContainer.style.marginBottom = '15px';

    const searchInput = document.createElement('input');
    searchInput.type = 'text';
    searchInput.placeholder = '–ü–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º —Å–≤–∞–π–ø–∞–º...';
    searchInput.style.flex = '1';
    searchInput.style.padding = '10px';
    searchInput.style.border = '1px solid #23272a';
    searchInput.style.borderRadius = '4px';
    searchInput.style.marginRight = '10px';
    searchInput.style.background = '#23272a';
    searchInput.style.color = '#ffffff';

    const searchButton = document.createElement('div'); // –ò–∫–æ–Ω–∫–∞ –≤–º–µ—Å—Ç–æ –∫–Ω–æ–ø–∫–∏
    searchButton.innerHTML = 'üîç'; // –ò–∫–æ–Ω–∫–∞ –ø–æ–∏—Å–∫–∞
    searchButton.style.padding = '10px';
    searchButton.style.cursor = 'pointer';
    searchButton.style.display = 'flex';
    searchButton.style.alignItems = 'center';
    searchButton.style.justifyContent = 'center';
    searchButton.style.color = '#2ecc71'; // –¶–≤–µ—Ç –∏–∫–æ–Ω–∫–∏
    searchButton.style.fontSize = '20px'; // –†–∞–∑–º–µ—Ä –∏–∫–æ–Ω–∫–∏

    searchButton.onclick = () => {
        const searchText = searchInput.value.trim();
        if (!searchText) {
            showNotification('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞.', 'info');
            return;
        }

        const foundSwipeId = Object.entries(lastMessage.swipes).find(([id, text]) =>
            text.replace(/\s+/g, ' ').includes(searchText)
        );

        if (foundSwipeId) {
            const [swipeId] = foundSwipeId;
            goToPinnedSwipe(Number(swipeId));
            showNotification(`–ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤ —Å–≤–∞–π–ø–µ #${Number(swipeId) + 1}.`, 'success');
            closePinnedSwipesMenu();
        } else {
            showNotification('–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.', 'error');
        }
    };

    searchContainer.appendChild(searchInput);
    searchContainer.appendChild(searchButton);
    menuContainer.appendChild(searchContainer);

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–π —Å–≤–∞–π–ø
    lastMessage.pinnedSwipes.forEach((swipeId, index) => {
        // –°–æ–∑–¥–∞—ë–º swipeMessage –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
        const swipeMessage = { ...lastMessage, mes: lastMessage.swipes[swipeId], swipe_id: swipeId };

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º getMessageFromTemplate –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è jQuery-–æ–±—ä–µ–∫—Ç–∞
        const renderedMessageJQuery = window.getMessageFromTemplate({
            mesId: swipeId,
            characterName: lastMessage.name,
            isUser: lastMessage.is_user,
			const avatarImg = (window.getThumbnailUrl || getThumbnailUrl)('avatar', window.characters[window.this_chid]?.avatar || 'default.png');
            timestamp: lastMessage.swipe_info?.[swipeId]?.send_date || lastMessage.send_date,
            extra: lastMessage.extra,
            tokenCount: lastMessage.extra?.token_count ?? 0,
        });

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º jQuery-–æ–±—ä–µ–∫—Ç –≤ DOM-—É–∑–µ–ª
        const renderedMessage = renderedMessageJQuery[0];

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        const messageText = lastMessage.swipes[swipeId];
        const formattedText = messageFormatting(
            messageText,
            lastMessage.name,
            lastMessage.is_system,
            lastMessage.is_user,
            swipeId
        );
        const messageTextElement = renderedMessage.querySelector('.mes_text');
        if (messageTextElement) {
            messageTextElement.innerHTML = formattedText;
            messageTextElement.style.maxHeight = '150px';
            messageTextElement.style.overflowY = 'auto';
        }

        // –î–æ–±–∞–≤–ª—è–µ–º Swipe ID –ø–æ–¥ –∞–≤–∞—Ç–∞—Ä–∫–æ–π
        const avatarWrapper = renderedMessage.querySelector('.mesAvatarWrapper');
        if (avatarWrapper) {
            const swipeIdElement = document.createElement('div');
            swipeIdElement.textContent = `#${parseInt(swipeId) + 1}`;
            swipeIdElement.style.fontSize = '12px';
            swipeIdElement.style.color = '#ffffff';
            swipeIdElement.style.textAlign = 'center';
            swipeIdElement.style.marginTop = '5px';
            avatarWrapper.appendChild(swipeIdElement);
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ "–ü–µ—Ä–µ–π—Ç–∏" –∏ "–£–¥–∞–ª–∏—Ç—å" –ø–æ–¥ –∞–≤–∞—Ç–∞—Ä–∫–æ–π
        const buttonsContainer = document.createElement('div');
        buttonsContainer.style.marginTop = '10px';
        buttonsContainer.style.textAlign = 'center';
        buttonsContainer.style.display = 'flex';
        buttonsContainer.style.justifyContent = 'center';
        buttonsContainer.style.alignItems = 'center';

        const goToButton = document.createElement('i');
        goToButton.className = 'fa-solid fa-arrow-right';
        goToButton.style.color = '#2ecc71';
        goToButton.style.cursor = 'pointer';
        goToButton.style.marginRight = '10px';
        goToButton.title = '–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–≤–∞–π–ø—É';
        goToButton.onclick = () => goToPinnedSwipe(swipeId);

        const deleteButton = document.createElement('i');
        deleteButton.className = 'fa-solid fa-skull';
        deleteButton.style.color = '#e74c3c';
        deleteButton.style.cursor = 'pointer';
        deleteButton.title = '–£–¥–∞–ª–∏—Ç—å —Å–≤–∞–π–ø';
        deleteButton.setAttribute('data-menu-ignore', 'true'); // –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç
        deleteButton.onclick = (event) => {
            event.stopPropagation(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
            removePinnedSwipe(swipeId);
        };

        buttonsContainer.appendChild(goToButton);
        buttonsContainer.appendChild(deleteButton);
        avatarWrapper.appendChild(buttonsContainer);

        // –°–æ–∑–¥–∞—ë–º —á–µ–∫–±–æ–∫—Å
        const checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.className = 'swipe-checkbox';
        checkbox.style.marginTop = '10px';
        checkbox.style.display = 'block';
        checkbox.style.margin = '10px auto'; // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —á–µ–∫–±–æ–∫—Å



        // –°–æ–∑–¥–∞—ë–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –ø–æ—Ä—è–¥–∫–∞
        const orderNumber = document.createElement('div');
        orderNumber.className = 'order-number';
        orderNumber.style.textAlign = 'center';
        orderNumber.style.color = '#ffffff';
        orderNumber.style.fontSize = '12px';
        orderNumber.style.marginTop = '5px';
        orderNumber.style.display = 'none'; // –°–∫—Ä—ã—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        // –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —á–µ–∫–±–æ–∫—Å–∞
        const checkboxContainer = document.createElement('div');
        checkboxContainer.style.textAlign = 'center';

        // –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫–±–æ–∫—Å –∏ –Ω–æ–º–µ—Ä –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        checkboxContainer.appendChild(checkbox);
        checkboxContainer.appendChild(orderNumber);

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —á–µ–∫–±–æ–∫—Å–∞ –ø–æ–¥ –∫–Ω–æ–ø–∫–∞–º–∏
        avatarWrapper.appendChild(checkboxContainer);

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è —á–µ–∫–±–æ–∫—Å–∞
        checkbox.addEventListener('change', (event) => handleSwipeSelection(event, swipeContainer));

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ ID —Å–≤–∞–π–ø–∞
        const swipeContainer = document.createElement('div');
        swipeContainer.className = 'swipe-container';
        swipeContainer.style.display = 'flex';
        swipeContainer.style.alignItems = 'flex-start';
        swipeContainer.style.marginBottom = '15px';
        swipeContainer.style.borderBottom = '1px solid #23272a'; // –õ–∏–Ω–∏—è –º–µ–∂–¥—É —Å–≤–∞–π–ø–∞–º–∏
        swipeContainer.style.paddingBottom = '15px';

        swipeContainer.messageText = messageText;
        swipeContainer.dataset.swipeId = swipeId;

        // –°–æ–∑–¥–∞—ë–º –ø–æ–¥-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
        const messageAndButtonsContainer = document.createElement('div');
        messageAndButtonsContainer.style.display = 'flex';
        messageAndButtonsContainer.style.flexDirection = 'column';
        messageAndButtonsContainer.style.flex = '1'; // –ü–æ–∑–≤–æ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä—è—Ç—å—Å—è

        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–æ–¥-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        messageAndButtonsContainer.appendChild(renderedMessage);

        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–≤–∞–π–ø–∞
        swipeContainer.appendChild(messageAndButtonsContainer);

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–≤–∞–π–ø–∞ –≤ –º–µ–Ω—é
        menuContainer.appendChild(swipeContainer);
    });

    // –†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–æ–º–ø—Ç–∞
    const promptEditorContainer = document.createElement('div');
    promptEditorContainer.style.display = 'flex';
    promptEditorContainer.style.flexDirection = 'column';
    promptEditorContainer.style.marginTop = '15px';

    // –ù–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    const initialPromptLabel = document.createElement('label');
    initialPromptLabel.textContent = '–ù–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç:';
    initialPromptLabel.style.color = '#ffffff';
    initialPromptLabel.style.marginBottom = '8px';

    const initialPromptInput = document.createElement('textarea');
    initialPromptInput.value = promptSettings.initialPrompt;
    initialPromptInput.style.width = '100%';
    initialPromptInput.style.height = '60px';
    initialPromptInput.style.marginBottom = '10px';

    // –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
    const separatorLabel = document.createElement('label');
    separatorLabel.textContent = '–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É —Å–≤–∞–π–ø–∞–º–∏:';
    separatorLabel.style.color = '#ffffff';
    separatorLabel.style.marginBottom = '5px';

    const separatorInput = document.createElement('textarea');
    separatorInput.value = promptSettings.separator;
    separatorInput.style.width = '100%';
    separatorInput.style.height = '60px';
    separatorInput.style.marginBottom = '10px';

    // –ü—Ä–æ–º–ø—Ç –≤ –∫–æ–Ω—Ü–µ
    const finalPromptLabel = document.createElement('label');
    finalPromptLabel.textContent = '–ü—Ä–æ–º–ø—Ç –≤ –∫–æ–Ω—Ü–µ:';
    finalPromptLabel.style.color = '#ffffff';
    finalPromptLabel.style.marginBottom = '5px';

    const finalPromptInput = document.createElement('textarea');
    finalPromptInput.value = promptSettings.finalPrompt;
    finalPromptInput.style.width = '100%';
    finalPromptInput.style.height = '60px';
    finalPromptInput.style.marginBottom = '10px';

	// –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–º–ø—Ç–∞
	const savePromptButton = document.createElement('button');
	savePromptButton.className = 'menu-button save-prompt-button'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º CSS –∫–ª–∞—Å—Å
	savePromptButton.textContent = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'; // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
	savePromptButton.title = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–∞'; // –ü–æ–¥—Å–∫–∞–∑–∫–∞
	savePromptButton.onclick = () => {
		promptSettings.initialPrompt = initialPromptInput.value;
		promptSettings.separator = separatorInput.value;
		promptSettings.finalPrompt = finalPromptInput.value;
		savePromptSettings();
		showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.', 'success');
	};

	// –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–≤–∞–π–ø–æ–≤
	const sendButton = document.createElement('button');
	sendButton.className = 'menu-button send-swipes-button'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º CSS –∫–ª–∞—Å—Å
	sendButton.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ'; // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
	sendButton.title = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–≤–∞–π–ø—ã'; // –ü–æ–¥—Å–∫–∞–∑–∫–∞
	sendButton.onclick = () => sendSelectedSwipes(selectedSwipes); // –õ–æ–≥–∏–∫–∞ –∫–ª–∏–∫–∞

	// –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ–±–µ–∏—Ö –∫–Ω–æ–ø–æ–∫
	const buttonsContainer = document.createElement('div');
	buttonsContainer.className = 'buttons-container'; // –û–±—â–∏–π –∫–ª–∞—Å—Å –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∫–Ω–æ–ø–æ–∫
	buttonsContainer.appendChild(savePromptButton); // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
	buttonsContainer.appendChild(sendButton); // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"

	// –î–æ–±–∞–≤–ª—è–µ–º –≤—Å—ë –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –ø—Ä–æ–º–ø—Ç–∞
	promptEditorContainer.appendChild(initialPromptLabel);
	promptEditorContainer.appendChild(initialPromptInput);
	promptEditorContainer.appendChild(separatorLabel);
	promptEditorContainer.appendChild(separatorInput);
	promptEditorContainer.appendChild(finalPromptLabel);
	promptEditorContainer.appendChild(finalPromptInput);

	// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–æ–º–ø—Ç–∞
	promptEditorContainer.appendChild(buttonsContainer);

	// –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–æ–º–ø—Ç–∞ –≤ –º–µ–Ω—é
	menuContainer.appendChild(promptEditorContainer);

	// –î–æ–±–∞–≤–ª—è–µ–º –º–µ–Ω—é –≤ DOM
	document.body.appendChild(menuContainer);


    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    setTimeout(() => {
        menuContainer.style.opacity = '1';
    }, 10);


    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
    setTimeout(() => {
		const handleOutsideClick = (event) => {
			// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–¥–µ–ª–∞–Ω –ª–∏ –∫–ª–∏–∫ –≤–Ω—É—Ç—Ä–∏ –º–µ–Ω—é
			const isClickInsideMenu = menuContainer.contains(event.target);

			if (isClickInsideMenu) {
				event.stopPropagation(); // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
				return;
			}

			closePinnedSwipesMenu();
			document.removeEventListener('click', handleOutsideClick);
		};

		
		setTimeout(() => {
			document.addEventListener('click', handleOutsideClick); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
		}, 100);

		// –ì–ª—É—à–∏–º –∫–ª–∏–∫–∏ –≤–Ω—É—Ç—Ä–∏ —Å–∞–º–æ–≥–æ –º–µ–Ω—é
		menuContainer.addEventListener('click', (event) => {
			event.stopPropagation(); // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–ø–ª—ã—Ç–∏—è —Å–æ–±—ã—Ç–∏–π –≤–Ω—É—Ç—Ä–∏ –º–µ–Ω—é
		});
	}, 100);


    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–≤–∞–π–ø–∞
    function handleSwipeSelection(event, swipeContainer) {
        const checkbox = event.target;
        const orderNumber = checkbox.nextSibling; // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç orderNumber

        if (checkbox.checked) {
            selectedSwipes.push({
                swipeId: swipeContainer.dataset.swipeId,
                order: selectedSwipes.length + 1,
                message: swipeContainer.messageText,
                swipeContainer: swipeContainer,
            });

            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–æ–º–µ—Ä –ø–æ—Ä—è–¥–∫–∞
            orderNumber.textContent = selectedSwipes.length;
            orderNumber.style.display = 'block';
        } else {
            // –£–¥–∞–ª—è–µ–º –∏–∑ selectedSwipes
            const index = selectedSwipes.findIndex(s => s.swipeId === swipeContainer.dataset.swipeId);
            if (index > -1) {
                selectedSwipes.splice(index, 1);
                // –û—á–∏—â–∞–µ–º –Ω–æ–º–µ—Ä –ø–æ—Ä—è–¥–∫–∞
                orderNumber.textContent = '';
                orderNumber.style.display = 'none';
                // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–æ–º–µ—Ä–∞ –ø–æ—Ä—è–¥–∫–æ–≤
                updateOrderIndicators();
            }
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –ø–æ—Ä—è–¥–∫–∞
    function updateOrderIndicators() {
        selectedSwipes.forEach((swipe, index) => {
            swipe.order = index + 1;
            const checkbox = swipe.swipeContainer.querySelector('.swipe-checkbox');
            const orderNumber = checkbox.nextSibling;
            if (orderNumber) {
                orderNumber.textContent = swipe.order;
            }
        });
    }
};

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–º–ø—Ç–∞
function loadPromptSettings() {
    const savedSettings = JSON.parse(localStorage.getItem('promptSettings'));
    if (savedSettings) {
        promptSettings = savedSettings;
    }
}

function savePromptSettings() {
    localStorage.setItem('promptSettings', JSON.stringify(promptSettings));
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
let promptSettings = {
    initialPrompt: 'Pause.',
    separator: '–°–≤–∞–π–ø',
    finalPrompt: '',
};

const closePinnedSwipesMenu = function() {
    const menu = document.querySelector('.pinned-swipes-menu');
    if (menu) {
        menu.style.opacity = '0'; // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
        setTimeout(() => {
            menu.remove();
        }, 300);
    }

    // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –≤–Ω–µ –º–µ–Ω—é
    document.removeEventListener('click', handleOutsideClick);
};



const goToPinnedSwipe = function(swipeId) {
    const lastMessage = chat[chat.length - 1];
    if (!lastMessage || !lastMessage.swipes) return;

    lastMessage.swipe_id = swipeId;
    lastMessage.mes = lastMessage.swipes[swipeId];
    saveChatDebounced();
    addOneMessage(lastMessage, { type: 'swipe' });
	document.removeEventListener('click', handleOutsideClick);
    closePinnedSwipesMenu();
};

const removePinnedSwipe = function(swipeId) {
    const lastMessage = chat[chat.length - 1];
    if (!lastMessage || !lastMessage.pinnedSwipes) return;

    lastMessage.pinnedSwipes = lastMessage.pinnedSwipes.filter(id => id !== swipeId);

    const swipeContainer = document.querySelector(`[data-swipe-id="${swipeId}"]`);
    if (swipeContainer) {
        swipeContainer.classList.add('swipe-container-removing');
        setTimeout(() => {
            swipeContainer.remove();

            if (lastMessage.pinnedSwipes.length === 0) {
                closePinnedSwipesMenu();
                showNotification('–ó–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–π —Å–≤–∞–π–ø —É–¥–∞–ª—ë–Ω. –ù–µ—Ç –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö —Å–≤–∞–π–ø–æ–≤.', 'info');
                return;
            }
        }, 500);
    }

    saveChatDebounced(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–∞—Ç–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Å–≤–∞–π–ø–∞
    showNotification('–ó–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–π —Å–≤–∞–π–ø —É–¥–∞–ª—ë–Ω.', 'success');
};







// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–≤–∞–π–ø–æ–≤
function formatSelectedSwipes(swipes) {
    let formattedMessage = promptSettings.initialPrompt;

    swipes.forEach((swipe, index) => {
        formattedMessage += `${promptSettings.separator} ${index + 1}\n${swipe.message}\n===\n`;
    });

    formattedMessage += promptSettings.finalPrompt;

    return formattedMessage;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–≤–∞–π–ø–æ–≤ –∫–∞–∫ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
function sendSelectedSwipes(selectedSwipes) {
    if (selectedSwipes.length === 0) {
        showNotification('–°–≤–∞–π–ø—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã.', 'error');
        return;
    }

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å–≤–∞–π–ø—ã –ø–æ –ø–æ—Ä—è–¥–∫—É
    selectedSwipes.sort((a, b) => a.order - b.order);

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const combinedMessage = formatSelectedSwipes(selectedSwipes);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    sendMessageAsUser(combinedMessage);

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
    closePinnedSwipesMenu();
	
	document.removeEventListener('click', handleOutsideClick);

}

// === 3. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ===
const showNotification = function(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.style.position = 'fixed';
    notification.style.bottom = '20px';
    notification.style.left = '50%';
    notification.style.transform = 'translateX(-50%)';
    notification.style.background = type === 'success' ? '#2ecc71' : type === 'error' ? '#e74c3c' : '#3498db';
    notification.style.color = '#fff';
    notification.style.padding = '10px 20px';
    notification.style.borderRadius = '4px';
    notification.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2)';
    notification.style.zIndex = '1000';
    notification.textContent = message;

    document.body.appendChild(notification);

    setTimeout(() => {
        notification.remove();
    }, 3000);
};

// === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ===
function addButtonsToInterface() {
    const extraButtonsContainer = document.querySelector('.extraMesButtons');
    if (!extraButtonsContainer) {
        console.log('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä .extraMesButtons –Ω–µ –Ω–∞–π–¥–µ–Ω.');
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∏ –ª–∏ –∫–Ω–æ–ø–∫–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã
    if (extraButtonsContainer.querySelector('.mes_pin')) {
        console.log('–ö–Ω–æ–ø–∫–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.');
        return;
    }

    // –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É "Pin current swipe"
    const pinButton = document.createElement('div');
    pinButton.className = 'mes_button mes_pin fa-solid fa-thumbtack interactable';
    pinButton.title = 'Pin current swipe';
    pinButton.tabIndex = 0; // –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∫–∏ –∫–Ω–æ–ø–∫–∏
    pinButton.setAttribute('onclick', 'pinCurrentSwipe(this)'); // –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç onclick

    // –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É "Show pinned swipes"
    const menuButton = document.createElement('div');
    menuButton.className = 'mes_button mes_pinned_menu fa-solid fa-list interactable';
    menuButton.title = 'Show pinned swipes';
    menuButton.tabIndex = 0; // –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∫–∏ –∫–Ω–æ–ø–∫–∏
    menuButton.setAttribute('onclick', 'showPinnedSwipesMenu()'); // –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç onclick

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    extraButtonsContainer.appendChild(pinButton);
    extraButtonsContainer.appendChild(menuButton);

    console.log('–ö–Ω–æ–ø–∫–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.');
}



// === –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ DOM ===
function observeInterfaceChanges() {
    const observer = new MutationObserver(() => {
        const extraButtonsContainer = document.querySelector('.extraMesButtons');
        if (extraButtonsContainer) {
            addButtonsToInterface();
        }
    });

    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ —Ç–µ–ª–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    observer.observe(document.body, { childList: true, subtree: true });
}
// –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∫ window, —á—Ç–æ–±—ã –æ–Ω–∏ –±—ã–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ
window.pinCurrentSwipe = pinCurrentSwipe;
window.showPinnedSwipesMenu = showPinnedSwipesMenu;
window.showNotification = showNotification;
window.closePinnedSwipesMenu = closePinnedSwipesMenu;
window.goToPinnedSwipe = goToPinnedSwipe;
window.removePinnedSwipe = removePinnedSwipe;

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å
observeInterfaceChanges();